stages:
  - build
  - test
  - deploy
  
image: mcr.microsoft.com/dotnet/core/sdk:3.1
  
build:
  stage: build
  tags:
    - windows
  dependencies: []
  artifacts:
    name: $CI_JOB_NAME-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
    expire_in: 1 week
    paths:
      - "src/*/bin"
      - "src/*/obj"
  script:
    - dotnet build src/HEAL.Bricks
    - dotnet build src/HEAL.Bricks -c Release
    - dotnet build src/HEAL.Bricks.Tests
    - dotnet build-server shutdown

test:windows:
  stage: test
  tags:
    - windows
  dependencies:
    - build
  script:
    - dotnet test src/HEAL.Bricks.Tests --no-build

test:linux:
  stage: test
  tags:
    - docker
  dependencies:
    - build
  artifacts:
    reports:
      cobertura: "**/coverage.cobertura.xml"
  script:
    # explicit restore is required, because each new container has an empty package cache
    - dotnet restore src/HEAL.Bricks.Tests
    - dotnet test src/HEAL.Bricks.Tests --no-build --collect:"XPlat Code Coverage"

deploy:
  stage: deploy
  when: manual
  tags:
    - windows
  dependencies:
    - build
  artifacts:
    name: $CI_JOB_NAME-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
    expire_in: 1 month
    paths:
      - "nupkgs/*"
  script:
    - dotnet pack src/HEAL.Bricks.Core -c Release --no-build --include-symbols --output nupkgs
    - dotnet pack src/HEAL.Bricks -c Release --no-build --include-symbols --output nupkgs
    # - dotnet nuget add source "$CI_SERVER_URL/api/v4/projects/719/packages/nuget/index.json" --name gitlab --username gitlab-ci-token --password $CI_JOB_TOKEN --store-password-in-clear-text
    - cd nupkgs
    - dotnet nuget push "*.nupkg" --source gitlab
